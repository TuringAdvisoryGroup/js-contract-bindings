/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestContract, TestContractInterface } from "../TestContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "EventCool",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "abort",
        type: "bool",
      },
    ],
    name: "testRequire",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103af806100206000396000f3fe6080604052600436106100435760003560e01c8063209652551461004c5780634f9d719e14610077578063552410771461008e578063fb667036146100cb5761004a565b3661004a57005b005b34801561005857600080fd5b506100616100f4565b60405161006e91906101be565b60405180910390f35b34801561008357600080fd5b5061008c6100fd565b005b34801561009a57600080fd5b506100b560048036038101906100b0919061020a565b61014e565b6040516100c291906101be565b60405180910390f35b3480156100d757600080fd5b506100f260048036038101906100ed919061026f565b610161565b005b60008054905090565b3373ffffffffffffffffffffffffffffffffffffffff167f66c934ef7a943022516fb8577026f8e1d3644c7cab53f91637a611f7b4f59b1d600a60405161014491906102e1565b60405180910390a2565b6000816000819055506000549050919050565b80156101a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019990610359565b60405180910390fd5b50565b6000819050919050565b6101b8816101a5565b82525050565b60006020820190506101d360008301846101af565b92915050565b600080fd5b6101e7816101a5565b81146101f257600080fd5b50565b600081359050610204816101de565b92915050565b6000602082840312156102205761021f6101d9565b5b600061022e848285016101f5565b91505092915050565b60008115159050919050565b61024c81610237565b811461025757600080fd5b50565b60008135905061026981610243565b92915050565b600060208284031215610285576102846101d9565b5b60006102938482850161025a565b91505092915050565b6000819050919050565b6000819050919050565b60006102cb6102c66102c18461029c565b6102a6565b6101a5565b9050919050565b6102db816102b0565b82525050565b60006020820190506102f660008301846102d2565b92915050565b600082825260208201905092915050565b7f4e4557204552524f520000000000000000000000000000000000000000000000600082015250565b60006103436009836102fc565b915061034e8261030d565b602082019050919050565b6000602082019050818103600083015261037281610336565b905091905056fea2646970667358221220b2072e50bfb956ee35647c4ce260372eac8513b63137912d28c12b01a406a04a64736f6c63430008090033";

export class TestContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestContract> {
    return super.deploy(overrides || {}) as Promise<TestContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestContract {
    return super.attach(address) as TestContract;
  }
  connect(signer: Signer): TestContract__factory {
    return super.connect(signer) as TestContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new utils.Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract {
    return new Contract(address, _abi, signerOrProvider) as TestContract;
  }
}
