/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MembershipsView,
  MembershipsViewInterface,
} from "../MembershipsView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "eternalStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "record",
        type: "bytes32",
      },
    ],
    name: "getBuyWalletCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCampaign",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "phasesLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "phases",
            type: "bytes32[]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct MembershipsTypes.Campaign",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getCampaignByOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "phasesLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "phases",
            type: "bytes32[]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct MembershipsTypes.Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "getCampaignByReferral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "phasesLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "phases",
            type: "bytes32[]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct MembershipsTypes.Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "schedule",
        type: "bytes32",
      },
    ],
    name: "getCampaignBySchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "campaignIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scheduleIndex",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipsTypes.ScheduleCampaign",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaignsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "record",
        type: "bytes32",
      },
    ],
    name: "getReferral",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "referral",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "referralFee",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipsTypes.ScheduleReferral",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "scheduleId",
        type: "bytes32",
      },
    ],
    name: "getSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "lotToken",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "lotSize",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "enum MembershipsTypes.AssetType",
                name: "assetType",
                type: "uint8",
              },
            ],
            internalType: "struct MembershipsTypes.Asset",
            name: "paymentAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "pricePerLot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rollFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBuyPerWallet",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipsTypes.MintingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021d6380380620021d6833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b6000815190506200008f8162000100565b92915050565b600060208284031215620000ae57620000ad620000fb565b5b6000620000be848285016200007e565b91505092915050565b6000620000d482620000db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200010b81620000c7565b81146200011757600080fd5b50565b6120ac806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ac886f261161005b578063ac886f261461014d578063e3ba797a1461017d578063f3e2ec16146101ae578063fb5474ae146101df57610088565b80633adc277a1461008d5780635598f8cc146100bd578063786dd9dd146100ed57806382e58d511461011d575b600080fd5b6100a760048036038101906100a291906113b6565b6101fd565b6040516100b49190611b55565b60405180910390f35b6100d760048036038101906100d291906114f5565b6102ba565b6040516100e49190611b33565b60405180910390f35b610107600480360381019061010291906113b6565b610377565b6040516101149190611b77565b60405180910390f35b610137600480360381019061013291906113b6565b610459565b6040516101449190611b92565b60405180910390f35b610167600480360381019061016291906113b6565b610510565b6040516101749190611bad565b60405180910390f35b61019760048036038101906101929190611389565b6105c3565b6040516101a5929190611bc8565b60405180910390f35b6101c860048036038101906101c39190611389565b6108bb565b6040516101d6929190611bc8565b60405180910390f35b6101e7610bb3565b6040516101f49190611bad565b60405180910390f35b610205610c59565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633adc277a836040518263ffffffff1660e01b815260040161025e9190611b18565b60006040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102b3919061147f565b9050919050565b6102c2610ceb565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635598f8cc836040518263ffffffff1660e01b815260040161031b9190611bad565b60006040518083038186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103709190611436565b9050919050565b61037f610d16565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4e4f803866040518263ffffffff1660e01b81526004016103de9190611b18565b60606040518083038186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e91906113e3565b9250925092506040518060600160405280848152602001838152602001828152509350505050919050565b610461610d3a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382e58d51836040518263ffffffff1660e01b81526004016104ba9190611b18565b604080518083038186803b1580156104d157600080fd5b505afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050991906114c8565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac886f26836040518263ffffffff1660e01b815260040161056c9190611b18565b60206040518083038186803b15801561058457600080fd5b505afa158015610598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bc9190611522565b9050919050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5aa2053856040518263ffffffff1660e01b81526004016106239190611ad4565b60206040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106739190611522565b905060008167ffffffffffffffff81111561069157610690611f83565b5b6040519080825280602002602001820160405280156106ca57816020015b6106b7610ceb565b8152602001906001900390816106af5790505b5090506000805b838110156108ac5760008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ff4d578a856040518363ffffffff1660e01b8152600401610737929190611aef565b604080518083038186803b15801561074e57600080fd5b505afa158015610762573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610786919061154f565b915091506002600381111561079e5761079d611f25565b5b8160038111156107b1576107b0611f25565b5b14156108975760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635598f8cc846040518263ffffffff1660e01b81526004016108139190611bad565b60006040518083038186803b15801561082b57600080fd5b505afa15801561083f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108689190611436565b90508086868061087790611ead565b97508151811061088a57610889611f54565b5b6020026020010181905250505b505080806108a490611ead565b9150506106d1565b50808294509450505050915091565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5aa2053856040518263ffffffff1660e01b815260040161091b9190611ad4565b60206040518083038186803b15801561093357600080fd5b505afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b9190611522565b905060008167ffffffffffffffff81111561098957610988611f83565b5b6040519080825280602002602001820160405280156109c257816020015b6109af610ceb565b8152602001906001900390816109a75790505b5090506000805b83811015610ba45760008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ff4d578a856040518363ffffffff1660e01b8152600401610a2f929190611aef565b604080518083038186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7e919061154f565b9150915060006003811115610a9657610a95611f25565b5b816003811115610aa957610aa8611f25565b5b1415610b8f5760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635598f8cc846040518263ffffffff1660e01b8152600401610b0b9190611bad565b60006040518083038186803b158015610b2357600080fd5b505afa158015610b37573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610b609190611436565b905080868680610b6f90611ead565b975081518110610b8257610b81611f54565b5b6020026020010181905250505b50508080610b9c90611ead565b9150506109c9565b50808294509450505050915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f3179c36040518163ffffffff1660e01b815260040160206040518083038186803b158015610c1c57600080fd5b505afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190611522565b905090565b604051806101c00160405280600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000801916815260200160008152602001600081526020016060815260200160608152602001610cd0610d6a565b81526020016000815260200160008152602001600081525090565b6040518060800160405280600080191681526020016000815260200160608152602001606081525090565b60405180606001604052806000801916815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115610da657610da5611f25565b5b81525090565b6000610dbf610dba84611c1d565b611bf8565b90508083825260208201905082856020860282011115610de257610de1611fc1565b5b60005b85811015610e125781610df88882610f53565b845260208401935060208301925050600181019050610de5565b5050509392505050565b6000610e2f610e2a84611c49565b611bf8565b90508083825260208201905082856020860282011115610e5257610e51611fc1565b5b60005b85811015610e825781610e68888261101c565b845260208401935060208301925050600181019050610e55565b5050509392505050565b6000610e9f610e9a84611c75565b611bf8565b90508083825260208201905082856020860282011115610ec257610ec1611fc1565b5b60005b85811015610ef25781610ed88882611374565b845260208401935060208301925050600181019050610ec5565b5050509392505050565b6000610f0f610f0a84611ca1565b611bf8565b905082815260208101848484011115610f2b57610f2a611fc6565b5b610f36848285611e49565b509392505050565b600081359050610f4d81611ffa565b92915050565b600081519050610f6281611ffa565b92915050565b600082601f830112610f7d57610f7c611fb2565b5b8151610f8d848260208601610dac565b91505092915050565b600082601f830112610fab57610faa611fb2565b5b8151610fbb848260208601610e1c565b91505092915050565b600082601f830112610fd957610fd8611fb2565b5b8151610fe9848260208601610e8c565b91505092915050565b60008151905061100181612011565b92915050565b60008135905061101681612028565b92915050565b60008151905061102b81612028565b92915050565b6000815190506110408161203f565b92915050565b6000815190506110558161204f565b92915050565b600082601f8301126110705761106f611fb2565b5b8151611080848260208601610efc565b91505092915050565b60006040828403121561109f5761109e611fb7565b5b6110a96040611bf8565b905060006110b984828501610f53565b60008301525060206110cd84828501611031565b60208301525092915050565b6000608082840312156110ef576110ee611fb7565b5b6110f96080611bf8565b905060006111098482850161101c565b600083015250602061111d84828501611374565b602083015250604082015167ffffffffffffffff81111561114157611140611fbc565b5b61114d84828501610f96565b604083015250606082015167ffffffffffffffff81111561117157611170611fbc565b5b61117d8482850161105b565b60608301525092915050565b60006101e082840312156111a05761119f611fb7565b5b6111ab6101c0611bf8565b905060006111bb84828501610ff2565b60008301525060206111cf84828501610ff2565b60208301525060406111e384828501610f53565b60408301525060606111f784828501611374565b606083015250608061120b84828501611374565b60808301525060a061121f8482850161101c565b60a08301525060c061123384828501611374565b60c08301525060e061124784828501611374565b60e08301525061010082015167ffffffffffffffff81111561126c5761126b611fbc565b5b61127884828501610f68565b6101008301525061012082015167ffffffffffffffff81111561129e5761129d611fbc565b5b6112aa84828501610fc4565b610120830152506101406112c084828501611089565b610140830152506101806112d684828501611374565b610160830152506101a06112ec84828501611374565b610180830152506101c061130284828501611374565b6101a08301525092915050565b60006040828403121561132557611324611fb7565b5b61132f6040611bf8565b9050600061133f84828501610f53565b600083015250602061135384828501611374565b60208301525092915050565b60008135905061136e8161205f565b92915050565b6000815190506113838161205f565b92915050565b60006020828403121561139f5761139e611fd0565b5b60006113ad84828501610f3e565b91505092915050565b6000602082840312156113cc576113cb611fd0565b5b60006113da84828501611007565b91505092915050565b6000806000606084860312156113fc576113fb611fd0565b5b600061140a8682870161101c565b935050602061141b86828701611374565b925050604061142c86828701611374565b9150509250925092565b60006020828403121561144c5761144b611fd0565b5b600082015167ffffffffffffffff81111561146a57611469611fcb565b5b611476848285016110d9565b91505092915050565b60006020828403121561149557611494611fd0565b5b600082015167ffffffffffffffff8111156114b3576114b2611fcb565b5b6114bf84828501611189565b91505092915050565b6000604082840312156114de576114dd611fd0565b5b60006114ec8482850161130f565b91505092915050565b60006020828403121561150b5761150a611fd0565b5b60006115198482850161135f565b91505092915050565b60006020828403121561153857611537611fd0565b5b600061154684828501611374565b91505092915050565b6000806040838503121561156657611565611fd0565b5b600061157485828601611374565b925050602061158585828601611046565b9150509250929050565b600061159b83836115eb565b60208301905092915050565b60006115b383836117a7565b60208301905092915050565b60006115cb838361183c565b905092915050565b60006115df8383611ab6565b60208301905092915050565b6115f481611dd2565b82525050565b61160381611dd2565b82525050565b600061161482611d12565b61161e8185611d7d565b935061162983611cd2565b8060005b8381101561165a578151611641888261158f565b975061164c83611d49565b92505060018101905061162d565b5085935050505092915050565b600061167282611d1d565b61167c8185611d8e565b935061168783611ce2565b8060005b838110156116b857815161169f88826115a7565b97506116aa83611d56565b92505060018101905061168b565b5085935050505092915050565b60006116d082611d28565b6116da8185611d9f565b9350836020820285016116ec85611cf2565b8060005b85811015611728578484038952815161170985826115bf565b945061171483611d63565b925060208a019950506001810190506116f0565b50829750879550505050505092915050565b600061174582611d33565b61174f8185611db0565b935061175a83611d02565b8060005b8381101561178b57815161177288826115d3565b975061177d83611d70565b92505060018101905061175e565b5085935050505092915050565b6117a181611de4565b82525050565b6117b081611df0565b82525050565b6117bf81611df0565b82525050565b6117ce81611e37565b82525050565b60006117df82611d3e565b6117e98185611dc1565b93506117f9818560208601611e49565b61180281611fd5565b840191505092915050565b60408201600082015161182360008501826115eb565b50602082015161183660208501826117c5565b50505050565b600060808301600083015161185460008601826117a7565b5060208301516118676020860182611ab6565b506040830151848203604086015261187f8282611667565b9150506060830151848203606086015261189982826117d4565b9150508091505092915050565b60006080830160008301516118be60008601826117a7565b5060208301516118d16020860182611ab6565b50604083015184820360408601526118e98282611667565b9150506060830151848203606086015261190382826117d4565b9150508091505092915050565b60006101e0830160008301516119296000860182611798565b50602083015161193c6020860182611798565b50604083015161194f60408601826115eb565b5060608301516119626060860182611ab6565b5060808301516119756080860182611ab6565b5060a083015161198860a08601826117a7565b5060c083015161199b60c0860182611ab6565b5060e08301516119ae60e0860182611ab6565b506101008301518482036101008601526119c88282611609565b9150506101208301518482036101208601526119e4828261173a565b9150506101408301516119fb61014086018261180d565b50610160830151611a10610180860182611ab6565b50610180830151611a256101a0860182611ab6565b506101a0830151611a3a6101c0860182611ab6565b508091505092915050565b606082016000820151611a5b60008501826117a7565b506020820151611a6e6020850182611ab6565b506040820151611a816040850182611ab6565b50505050565b604082016000820151611a9d60008501826115eb565b506020820151611ab06020850182611ab6565b50505050565b611abf81611e2d565b82525050565b611ace81611e2d565b82525050565b6000602082019050611ae960008301846115fa565b92915050565b6000604082019050611b0460008301856115fa565b611b116020830184611ac5565b9392505050565b6000602082019050611b2d60008301846117b6565b92915050565b60006020820190508181036000830152611b4d81846118a6565b905092915050565b60006020820190508181036000830152611b6f8184611910565b905092915050565b6000606082019050611b8c6000830184611a45565b92915050565b6000604082019050611ba76000830184611a87565b92915050565b6000602082019050611bc26000830184611ac5565b92915050565b6000604082019050611bdd6000830185611ac5565b8181036020830152611bef81846116c5565b90509392505050565b6000611c02611c13565b9050611c0e8282611e7c565b919050565b6000604051905090565b600067ffffffffffffffff821115611c3857611c37611f83565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611c6457611c63611f83565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611c9057611c8f611f83565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611cbc57611cbb611f83565b5b611cc582611fd5565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611ddd82611e0d565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611e0882611fe6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611e4282611dfa565b9050919050565b60005b83811015611e67578082015181840152602081019050611e4c565b83811115611e76576000848401525b50505050565b611e8582611fd5565b810181811067ffffffffffffffff82111715611ea457611ea3611f83565b5b80604052505050565b6000611eb882611e2d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611eeb57611eea611ef6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60028110611ff757611ff6611f25565b5b50565b61200381611dd2565b811461200e57600080fd5b50565b61201a81611de4565b811461202557600080fd5b50565b61203181611df0565b811461203c57600080fd5b50565b6002811061204c57600080fd5b50565b6004811061205c57600080fd5b50565b61206881611e2d565b811461207357600080fd5b5056fea264697066735822122075ca1f9e391b95f896456643e9fb0e62a64e572bd0c9cd40b9d4794c4deb15ec64736f6c63430008070033";

export class MembershipsView__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    eternalStorage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MembershipsView> {
    return super.deploy(
      eternalStorage,
      overrides || {}
    ) as Promise<MembershipsView>;
  }
  getDeployTransaction(
    eternalStorage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(eternalStorage, overrides || {});
  }
  attach(address: string): MembershipsView {
    return super.attach(address) as MembershipsView;
  }
  connect(signer: Signer): MembershipsView__factory {
    return super.connect(signer) as MembershipsView__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipsViewInterface {
    return new utils.Interface(_abi) as MembershipsViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MembershipsView {
    return new Contract(address, _abi, signerOrProvider) as MembershipsView;
  }
}
