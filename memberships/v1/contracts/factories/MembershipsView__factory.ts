/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MembershipsView,
  MembershipsViewInterface,
} from "../MembershipsView";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "eternalStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "record",
        type: "bytes32",
      },
    ],
    name: "getBuyWalletCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCampaign",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "phasesLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "phases",
            type: "bytes32[]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct MembershipsTypes.Campaign",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getCampaignByOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "phasesLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "phases",
            type: "bytes32[]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct MembershipsTypes.Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "getCampaignByReferral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "phasesLength",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "phases",
            type: "bytes32[]",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
        ],
        internalType: "struct MembershipsTypes.Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "schedule",
        type: "bytes32",
      },
    ],
    name: "getCampaignBySchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "campaignId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "campaignIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "scheduleIndex",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipsTypes.ScheduleCampaign",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaignsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "scheduleID",
        type: "bytes32",
      },
      {
        internalType: "enum MembershipsTypes.UserType",
        name: "userType",
        type: "uint8",
      },
    ],
    name: "getClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "record",
        type: "bytes32",
      },
    ],
    name: "getReferral",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "referral",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "referralFee",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipsTypes.ScheduleReferral",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "scheduleId",
        type: "bytes32",
      },
    ],
    name: "getSchedule",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revoked",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountTotal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "released",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "lotToken",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "lotSize",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "enum MembershipsTypes.AssetType",
                name: "assetType",
                type: "uint8",
              },
            ],
            internalType: "struct MembershipsTypes.Asset",
            name: "paymentAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "pricePerLot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rollFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBuyPerWallet",
            type: "uint256",
          },
        ],
        internalType: "struct MembershipsTypes.MintingSchedule",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200238d3803806200238d833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b6000815190506200008f8162000100565b92915050565b600060208284031215620000ae57620000ad620000fb565b5b6000620000be848285016200007e565b91505092915050565b6000620000d482620000db565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200010b81620000c7565b81146200011757600080fd5b50565b612263806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063ac886f2611610066578063ac886f2614610158578063e3ba797a14610188578063efc427b7146101b9578063f3e2ec16146101e9578063fb5474ae1461021a57610093565b80633adc277a146100985780635598f8cc146100c8578063786dd9dd146100f857806382e58d5114610128575b600080fd5b6100b260048036038101906100ad91906114bc565b610238565b6040516100bf9190611cd3565b60405180910390f35b6100e260048036038101906100dd919061163b565b6102f5565b6040516100ef9190611cb1565b60405180910390f35b610112600480360381019061010d91906114bc565b6103b2565b60405161011f9190611cf5565b60405180910390f35b610142600480360381019061013d91906114bc565b610494565b60405161014f9190611d10565b60405180910390f35b610172600480360381019061016d91906114bc565b61054b565b60405161017f9190611d2b565b60405180910390f35b6101a2600480360381019061019d919061148f565b6105fe565b6040516101b0929190611d46565b60405180910390f35b6101d360048036038101906101ce91906114e9565b6108f6565b6040516101e09190611d2b565b60405180910390f35b61020360048036038101906101fe919061148f565b6109ac565b604051610211929190611d46565b60405180910390f35b610222610ca4565b60405161022f9190611d2b565b60405180910390f35b610240610d4a565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633adc277a836040518263ffffffff1660e01b81526004016102999190611c6d565b60006040518083038186803b1580156102b157600080fd5b505afa1580156102c5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102ee91906115c5565b9050919050565b6102fd610ddc565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635598f8cc836040518263ffffffff1660e01b81526004016103569190611d2b565b60006040518083038186803b15801561036e57600080fd5b505afa158015610382573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103ab919061157c565b9050919050565b6103ba610e07565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4e4f803866040518263ffffffff1660e01b81526004016104199190611c6d565b60606040518083038186803b15801561043157600080fd5b505afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611529565b9250925092506040518060600160405280848152602001838152602001828152509350505050919050565b61049c610e2b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382e58d51836040518263ffffffff1660e01b81526004016104f59190611c6d565b604080518083038186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610544919061160e565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac886f26836040518263ffffffff1660e01b81526004016105a79190611c6d565b60206040518083038186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190611668565b9050919050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5aa2053856040518263ffffffff1660e01b815260040161065e9190611c29565b60206040518083038186803b15801561067657600080fd5b505afa15801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae9190611668565b905060008167ffffffffffffffff8111156106cc576106cb612126565b5b60405190808252806020026020018201604052801561070557816020015b6106f2610ddc565b8152602001906001900390816106ea5790505b5090506000805b838110156108e75760008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ff4d578a856040518363ffffffff1660e01b8152600401610772929190611c44565b604080518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c19190611695565b91509150600260038111156107d9576107d86120c8565b5b8160038111156107ec576107eb6120c8565b5b14156108d25760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635598f8cc846040518263ffffffff1660e01b815260040161084e9190611d2b565b60006040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906108a3919061157c565b9050808686806108b290612050565b9750815181106108c5576108c46120f7565b5b6020026020010181905250505b505080806108df90612050565b91505061070c565b50808294509450505050915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efc427b784846040518363ffffffff1660e01b8152600401610954929190611c88565b60206040518083038186803b15801561096c57600080fd5b505afa158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a49190611668565b905092915050565b6000606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5aa2053856040518263ffffffff1660e01b8152600401610a0c9190611c29565b60206040518083038186803b158015610a2457600080fd5b505afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c9190611668565b905060008167ffffffffffffffff811115610a7a57610a79612126565b5b604051908082528060200260200182016040528015610ab357816020015b610aa0610ddc565b815260200190600190039081610a985790505b5090506000805b83811015610c955760008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ff4d578a856040518363ffffffff1660e01b8152600401610b20929190611c44565b604080518083038186803b158015610b3757600080fd5b505afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190611695565b9150915060006003811115610b8757610b866120c8565b5b816003811115610b9a57610b996120c8565b5b1415610c805760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635598f8cc846040518263ffffffff1660e01b8152600401610bfc9190611d2b565b60006040518083038186803b158015610c1457600080fd5b505afa158015610c28573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c51919061157c565b905080868680610c6090612050565b975081518110610c7357610c726120f7565b5b6020026020010181905250505b50508080610c8d90612050565b915050610aba565b50808294509450505050915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f3179c36040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0d57600080fd5b505afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190611668565b905090565b604051806101c00160405280600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000801916815260200160008152602001600081526020016060815260200160608152602001610dc1610e5b565b81526020016000815260200160008152602001600081525090565b6040518060800160405280600080191681526020016000815260200160608152602001606081525090565b60405180606001604052806000801916815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160006001811115610e9757610e966120c8565b5b81525090565b6000610eb0610eab84611d9b565b611d76565b90508083825260208201905082856020860282011115610ed357610ed2612164565b5b60005b85811015610f035781610ee98882611044565b845260208401935060208301925050600181019050610ed6565b5050509392505050565b6000610f20610f1b84611dc7565b611d76565b90508083825260208201905082856020860282011115610f4357610f42612164565b5b60005b85811015610f735781610f59888261110d565b845260208401935060208301925050600181019050610f46565b5050509392505050565b6000610f90610f8b84611df3565b611d76565b90508083825260208201905082856020860282011115610fb357610fb2612164565b5b60005b85811015610fe35781610fc9888261147a565b845260208401935060208301925050600181019050610fb6565b5050509392505050565b6000611000610ffb84611e1f565b611d76565b90508281526020810184848401111561101c5761101b612169565b5b611027848285611fec565b509392505050565b60008135905061103e816121b1565b92915050565b600081519050611053816121b1565b92915050565b600082601f83011261106e5761106d612155565b5b815161107e848260208601610e9d565b91505092915050565b600082601f83011261109c5761109b612155565b5b81516110ac848260208601610f0d565b91505092915050565b600082601f8301126110ca576110c9612155565b5b81516110da848260208601610f7d565b91505092915050565b6000815190506110f2816121c8565b92915050565b600081359050611107816121df565b92915050565b60008151905061111c816121df565b92915050565b600081519050611131816121f6565b92915050565b60008135905061114681612206565b92915050565b60008151905061115b81612206565b92915050565b600082601f83011261117657611175612155565b5b8151611186848260208601610fed565b91505092915050565b6000604082840312156111a5576111a461215a565b5b6111af6040611d76565b905060006111bf84828501611044565b60008301525060206111d384828501611122565b60208301525092915050565b6000608082840312156111f5576111f461215a565b5b6111ff6080611d76565b9050600061120f8482850161110d565b60008301525060206112238482850161147a565b602083015250604082015167ffffffffffffffff8111156112475761124661215f565b5b61125384828501611087565b604083015250606082015167ffffffffffffffff8111156112775761127661215f565b5b61128384828501611161565b60608301525092915050565b60006101e082840312156112a6576112a561215a565b5b6112b16101c0611d76565b905060006112c1848285016110e3565b60008301525060206112d5848285016110e3565b60208301525060406112e984828501611044565b60408301525060606112fd8482850161147a565b60608301525060806113118482850161147a565b60808301525060a06113258482850161110d565b60a08301525060c06113398482850161147a565b60c08301525060e061134d8482850161147a565b60e08301525061010082015167ffffffffffffffff8111156113725761137161215f565b5b61137e84828501611059565b6101008301525061012082015167ffffffffffffffff8111156113a4576113a361215f565b5b6113b0848285016110b5565b610120830152506101406113c68482850161118f565b610140830152506101806113dc8482850161147a565b610160830152506101a06113f28482850161147a565b610180830152506101c06114088482850161147a565b6101a08301525092915050565b60006040828403121561142b5761142a61215a565b5b6114356040611d76565b9050600061144584828501611044565b60008301525060206114598482850161147a565b60208301525092915050565b60008135905061147481612216565b92915050565b60008151905061148981612216565b92915050565b6000602082840312156114a5576114a4612173565b5b60006114b38482850161102f565b91505092915050565b6000602082840312156114d2576114d1612173565b5b60006114e0848285016110f8565b91505092915050565b60008060408385031215611500576114ff612173565b5b600061150e858286016110f8565b925050602061151f85828601611137565b9150509250929050565b60008060006060848603121561154257611541612173565b5b60006115508682870161110d565b93505060206115618682870161147a565b92505060406115728682870161147a565b9150509250925092565b60006020828403121561159257611591612173565b5b600082015167ffffffffffffffff8111156115b0576115af61216e565b5b6115bc848285016111df565b91505092915050565b6000602082840312156115db576115da612173565b5b600082015167ffffffffffffffff8111156115f9576115f861216e565b5b6116058482850161128f565b91505092915050565b60006040828403121561162457611623612173565b5b600061163284828501611415565b91505092915050565b60006020828403121561165157611650612173565b5b600061165f84828501611465565b91505092915050565b60006020828403121561167e5761167d612173565b5b600061168c8482850161147a565b91505092915050565b600080604083850312156116ac576116ab612173565b5b60006116ba8582860161147a565b92505060206116cb8582860161114c565b9150509250929050565b60006116e18383611731565b60208301905092915050565b60006116f983836118ed565b60208301905092915050565b60006117118383611991565b905092915050565b60006117258383611c0b565b60208301905092915050565b61173a81611f50565b82525050565b61174981611f50565b82525050565b600061175a82611e90565b6117648185611efb565b935061176f83611e50565b8060005b838110156117a057815161178788826116d5565b975061179283611ec7565b925050600181019050611773565b5085935050505092915050565b60006117b882611e9b565b6117c28185611f0c565b93506117cd83611e60565b8060005b838110156117fe5781516117e588826116ed565b97506117f083611ed4565b9250506001810190506117d1565b5085935050505092915050565b600061181682611ea6565b6118208185611f1d565b93508360208202850161183285611e70565b8060005b8581101561186e578484038952815161184f8582611705565b945061185a83611ee1565b925060208a01995050600181019050611836565b50829750879550505050505092915050565b600061188b82611eb1565b6118958185611f2e565b93506118a083611e80565b8060005b838110156118d15781516118b88882611719565b97506118c383611eee565b9250506001810190506118a4565b5085935050505092915050565b6118e781611f62565b82525050565b6118f681611f6e565b82525050565b61190581611f6e565b82525050565b61191481611fc8565b82525050565b61192381611fda565b82525050565b600061193482611ebc565b61193e8185611f3f565b935061194e818560208601611fec565b61195781612178565b840191505092915050565b6040820160008201516119786000850182611731565b50602082015161198b602085018261190b565b50505050565b60006080830160008301516119a960008601826118ed565b5060208301516119bc6020860182611c0b565b50604083015184820360408601526119d482826117ad565b915050606083015184820360608601526119ee8282611929565b9150508091505092915050565b6000608083016000830151611a1360008601826118ed565b506020830151611a266020860182611c0b565b5060408301518482036040860152611a3e82826117ad565b91505060608301518482036060860152611a588282611929565b9150508091505092915050565b60006101e083016000830151611a7e60008601826118de565b506020830151611a9160208601826118de565b506040830151611aa46040860182611731565b506060830151611ab76060860182611c0b565b506080830151611aca6080860182611c0b565b5060a0830151611add60a08601826118ed565b5060c0830151611af060c0860182611c0b565b5060e0830151611b0360e0860182611c0b565b50610100830151848203610100860152611b1d828261174f565b915050610120830151848203610120860152611b398282611880565b915050610140830151611b50610140860182611962565b50610160830151611b65610180860182611c0b565b50610180830151611b7a6101a0860182611c0b565b506101a0830151611b8f6101c0860182611c0b565b508091505092915050565b606082016000820151611bb060008501826118ed565b506020820151611bc36020850182611c0b565b506040820151611bd66040850182611c0b565b50505050565b604082016000820151611bf26000850182611731565b506020820151611c056020850182611c0b565b50505050565b611c1481611fbe565b82525050565b611c2381611fbe565b82525050565b6000602082019050611c3e6000830184611740565b92915050565b6000604082019050611c596000830185611740565b611c666020830184611c1a565b9392505050565b6000602082019050611c8260008301846118fc565b92915050565b6000604082019050611c9d60008301856118fc565b611caa602083018461191a565b9392505050565b60006020820190508181036000830152611ccb81846119fb565b905092915050565b60006020820190508181036000830152611ced8184611a65565b905092915050565b6000606082019050611d0a6000830184611b9a565b92915050565b6000604082019050611d256000830184611bdc565b92915050565b6000602082019050611d406000830184611c1a565b92915050565b6000604082019050611d5b6000830185611c1a565b8181036020830152611d6d818461180b565b90509392505050565b6000611d80611d91565b9050611d8c828261201f565b919050565b6000604051905090565b600067ffffffffffffffff821115611db657611db5612126565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611de257611de1612126565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e0e57611e0d612126565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611e3a57611e39612126565b5b611e4382612178565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611f5b82611f9e565b9050919050565b60008115159050919050565b6000819050919050565b6000819050611f8682612189565b919050565b6000819050611f998261219d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611fd382611f78565b9050919050565b6000611fe582611f8b565b9050919050565b60005b8381101561200a578082015181840152602081019050611fef565b83811115612019576000848401525b50505050565b61202882612178565b810181811067ffffffffffffffff8211171561204757612046612126565b5b80604052505050565b600061205b82611fbe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561208e5761208d612099565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6002811061219a576121996120c8565b5b50565b600481106121ae576121ad6120c8565b5b50565b6121ba81611f50565b81146121c557600080fd5b50565b6121d181611f62565b81146121dc57600080fd5b50565b6121e881611f6e565b81146121f357600080fd5b50565b6002811061220357600080fd5b50565b6004811061221357600080fd5b50565b61221f81611fbe565b811461222a57600080fd5b5056fea26469706673582212205bb12e3b0bbd806610520dcfcbaf438df2164494d70994498d0b1d8b4b840b8464736f6c63430008070033";

export class MembershipsView__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    eternalStorage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MembershipsView> {
    return super.deploy(
      eternalStorage,
      overrides || {}
    ) as Promise<MembershipsView>;
  }
  getDeployTransaction(
    eternalStorage: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(eternalStorage, overrides || {});
  }
  attach(address: string): MembershipsView {
    return super.attach(address) as MembershipsView;
  }
  connect(signer: Signer): MembershipsView__factory {
    return super.connect(signer) as MembershipsView__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipsViewInterface {
    return new utils.Interface(_abi) as MembershipsViewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MembershipsView {
    return new Contract(address, _abi, signerOrProvider) as MembershipsView;
  }
}
