/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { SocialMoney, SocialMoneyInterface } from "../SocialMoney";

const _abi = [
  {
    type: "constructor",
    payable: false,
    inputs: [
      {
        type: "string",
        name: "_name",
      },
      {
        type: "string",
        name: "_symbol",
      },
      {
        type: "uint8",
        name: "_decimals",
      },
      {
        type: "uint256[4]",
        name: "_proportions",
      },
      {
        type: "address",
        name: "_vestingBeneficiary",
      },
      {
        type: "address",
        name: "_platformWallet",
      },
      {
        type: "address",
        name: "_tokenVestingInstance",
      },
      {
        type: "address",
        name: "_referral",
      },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "Approval",
    inputs: [
      {
        type: "address",
        name: "owner",
        indexed: true,
      },
      {
        type: "address",
        name: "spender",
        indexed: true,
      },
      {
        type: "uint256",
        name: "value",
        indexed: false,
      },
    ],
  },
  {
    type: "event",
    anonymous: false,
    name: "Transfer",
    inputs: [
      {
        type: "address",
        name: "from",
        indexed: true,
      },
      {
        type: "address",
        name: "to",
        indexed: true,
      },
      {
        type: "uint256",
        name: "value",
        indexed: false,
      },
    ],
  },
  {
    type: "function",
    name: "allowance",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      {
        type: "address",
        name: "owner",
      },
      {
        type: "address",
        name: "spender",
      },
    ],
    outputs: [
      {
        type: "uint256",
      },
    ],
  },
  {
    type: "function",
    name: "approve",
    constant: false,
    payable: false,
    inputs: [
      {
        type: "address",
        name: "spender",
      },
      {
        type: "uint256",
        name: "amount",
      },
    ],
    outputs: [
      {
        type: "bool",
      },
    ],
  },
  {
    type: "function",
    name: "balanceOf",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      {
        type: "address",
        name: "account",
      },
    ],
    outputs: [
      {
        type: "uint256",
      },
    ],
  },
  {
    type: "function",
    name: "decimals",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [
      {
        type: "uint8",
      },
    ],
  },
  {
    type: "function",
    name: "decreaseAllowance",
    constant: false,
    payable: false,
    inputs: [
      {
        type: "address",
        name: "spender",
      },
      {
        type: "uint256",
        name: "subtractedValue",
      },
    ],
    outputs: [
      {
        type: "bool",
      },
    ],
  },
  {
    type: "function",
    name: "increaseAllowance",
    constant: false,
    payable: false,
    inputs: [
      {
        type: "address",
        name: "spender",
      },
      {
        type: "uint256",
        name: "addedValue",
      },
    ],
    outputs: [
      {
        type: "bool",
      },
    ],
  },
  {
    type: "function",
    name: "name",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [
      {
        type: "string",
      },
    ],
  },
  {
    type: "function",
    name: "symbol",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [
      {
        type: "string",
      },
    ],
  },
  {
    type: "function",
    name: "totalSupply",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [],
    outputs: [
      {
        type: "uint256",
      },
    ],
  },
  {
    type: "function",
    name: "transfer",
    constant: false,
    payable: false,
    inputs: [
      {
        type: "address",
        name: "recipient",
      },
      {
        type: "uint256",
        name: "amount",
      },
    ],
    outputs: [
      {
        type: "bool",
      },
    ],
  },
  {
    type: "function",
    name: "transferFrom",
    constant: false,
    payable: false,
    inputs: [
      {
        type: "address",
        name: "sender",
      },
      {
        type: "address",
        name: "recipient",
      },
      {
        type: "uint256",
        name: "amount",
      },
    ],
    outputs: [
      {
        type: "bool",
      },
    ],
  },
];

export class SocialMoney__factory {
  static readonly abi = _abi;
  static createInterface(): SocialMoneyInterface {
    return new utils.Interface(_abi) as SocialMoneyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SocialMoney {
    return new Contract(address, _abi, signerOrProvider) as SocialMoney;
  }
}
